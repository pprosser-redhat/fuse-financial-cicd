<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd             http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.18.1.xsd">
    <bean
        class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelHttpTransportServlet"/>
    <bean
        class="org.springframework.boot.web.servlet.ServletRegistrationBean" id="servlet">
        <property name="name" value="CamelServlet"/>
        <property name="servlet" ref="camelHttpTransportServlet"/>
        <property name="urlMappings" value="/demos/*"/>
    </bean>
    <bean class="com.redhat.fisdemoblockchain.MockBitcoinApp" id="mockBitcoinApp"/>
    <camelContext id="fisBlockChain" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="api-docs" bindingMode="json"
            component="servlet" contextPath="/demos">
            <apiProperty key="cors" value="true"/>
            <apiProperty key="api.title" value="Healthcare demo clinical API"/>
            <apiProperty key="api.version" value="1.0.0"/>
        </restConfiguration>
        <rest id="rest-bitcoinaccount" path="/bitcoinaccount">
            <get id="get-balance" uri="balance/{acctid}">
                <to uri="direct:getBalance"/>
            </get>
            <get id="get-transfer" uri="transfer/{acctid}/{amt}/{recptid}">
                <to uri="direct:dotransfer"/>
            </get>
        </rest>
        <!-- Camel Routes -->
        <route id="balanceRoute">
            <from id="_from1" uri="direct:getBalance"/>
            <log id="log_1" message="Get balance from ${headers.acctid}"/>
            <setBody id="_setBody2">
                <simple>${headers.acctid}</simple>
            </setBody>
            <to id="_tobalanceq" uri="amq:queue:balance"/>
            <setHeader headerName="camelhttpresponsecode" id="_setHeader1">
                <simple>${headers.balancestatus}</simple>
            </setHeader>
        </route>
        <route id="transferRoute">
            <from id="_from1" uri="direct:dotransfer"/>
            <log id="log_2" message="Transfering from ${header.acctid} to ${header.recptid} with ${header.amt}"/>
            <setBody id="_setBodyTempMap">
                <simple>${header.acctid},${header.amt},${header.recptid}</simple>
            </setBody>
            <to id="_totransferq" uri="amq:queue:transfer"/>
        </route>
        <route id="mockbalance">
            <from id="_from2" uri="amq:queue:balance"/>
            <log id="log_3" message="${body}"/>
            <doTry id="_doTry1">
                <bean id="toBlockchain" method="getBalance" ref="mockBitcoinApp"/>
                <setBody id="_setBody3">
                    <simple>Account ${header.acctid} has balance of : ${body}</simple>
                </setBody>
                <setHeader headerName="balancestatus" id="_setHeader2">
                    <constant>200</constant>
                </setHeader>
                <doCatch id="_doCatch1">
                    <exception>com.redhat.fisdemoblockchain.exception.NoAccountFoundException</exception>
                    <log id="log_5" message="No Account!!"/>
                    <setBody id="_setBody1">
                        <constant>No Account Found!</constant>
                    </setBody>
                </doCatch>
                <doCatch id="_doCatch2">
                    <exception>com.redhat.fisdemoblockchain.exception.AccountFormatException</exception>
                    <log id="log_6" message="Account Format error!!"/>
                    <setBody id="_setBody1">
                        <constant>Account Format Error!</constant>
                    </setBody>
                    <setHeader headerName="balancestatus" id="_setHeader3">
                        <constant>400</constant>
                    </setHeader>
                </doCatch>
            </doTry>
        </route>
        <route id="mocktransfer">
            <from id="_from3" uri="amq:queue:transfer"/>
            <log id="log_4" message="Tokenized ${body}"/>
            <bean id="_bean1" method="transfer(${body})" ref="mockBitcoinApp"/>
        </route>
    </camelContext>
</beans>
